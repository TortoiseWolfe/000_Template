# Environment Configuration
# Copy this file to .env and fill in your values
# NEVER commit .env to version control

# ====================
# APPLICATION
# ====================
NODE_ENV=development
APP_NAME=PROJECT_NAME
APP_VERSION=1.0.0
PUBLIC_URL=http://localhost:3000
PORT=3000

# ====================
# PRIVACY FIRST - All disabled by default
# ====================
ENABLE_ANALYTICS=false
ENABLE_ERROR_TRACKING=false
ENABLE_COOKIES=false
ENABLE_TELEMETRY=false
ENABLE_USER_TRACKING=false

# ====================
# SECURITY
# ====================
SESSION_SECRET=generate_secure_random_string_min_32_chars
JWT_SECRET=generate_another_secure_random_string
JWT_EXPIRY=15m
REFRESH_TOKEN_EXPIRY=7d
ENCRYPTION_KEY=generate_256_bit_key
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
RATE_LIMIT_PER_MINUTE=60
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=.jpg,.jpeg,.png,.pdf,.doc,.docx
CSP_DIRECTIVES=default-src 'self'; script-src 'self' 'unsafe-inline';

# ====================
# DATABASE
# ====================
DATABASE_URL=postgresql://user:password@localhost:5432/dbname
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10
DATABASE_SSL=false
REDIS_URL=redis://localhost:6379
MONGODB_URI=mongodb://localhost:27017/dbname

# ====================
# API KEYS (External Services)
# ====================
# Authentication
AUTH0_DOMAIN=
AUTH0_CLIENT_ID=
AUTH0_CLIENT_SECRET=
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# Email Service
SENDGRID_API_KEY=
SENDGRID_FROM_EMAIL=noreply@example.com
RESEND_API_KEY=
EMAIL_FROM_NAME=PROJECT_NAME

# Storage
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
S3_BUCKET_NAME=
CLOUDINARY_URL=

# Monitoring
SENTRY_DSN=
SENTRY_ENVIRONMENT=development
NEW_RELIC_LICENSE_KEY=
DATADOG_API_KEY=

# Payment
STRIPE_PUBLISHABLE_KEY=
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# ====================
# FEATURE FLAGS
# ====================
FEATURE_NEW_UI=false
FEATURE_BETA_ACCESS=false
FEATURE_MAINTENANCE_MODE=false
FEATURE_READ_ONLY=false
FEATURE_DEBUG_MODE=true
FEATURE_API_V2=false

# ====================
# DEVELOPMENT
# ====================
DEBUG=false
LOG_LEVEL=info
PRETTY_LOGS=true
MOCK_EXTERNAL_APIS=true
SEED_DATABASE=true
HOT_RELOAD=true

# ====================
# TESTING
# ====================
TEST_DATABASE_URL=postgresql://user:password@localhost:5432/test_dbname
TEST_API_KEY=test_api_key_for_e2e_tests
HEADLESS_BROWSER=true
PARALLEL_TESTS=4
COVERAGE_THRESHOLD=80

# ====================
# DEPLOYMENT
# ====================
# GitHub Pages
GH_PAGES_BRANCH=gh-pages
GH_PAGES_DOMAIN=

# Vercel
VERCEL_URL=
VERCEL_ENV=development

# Docker
DOCKER_REGISTRY=
DOCKER_IMAGE_NAME=
CONTAINER_PORT=3000

# VPS
SSH_HOST=
SSH_USER=
SSH_KEY_PATH=
DEPLOY_PATH=/var/www/app

# ====================
# THIRD PARTY INTEGRATIONS
# ====================
SLACK_WEBHOOK_URL=
DISCORD_WEBHOOK_URL=
TWITTER_API_KEY=
TWITTER_API_SECRET=
GITHUB_TOKEN=
GITLAB_TOKEN=

# ====================
# LOCALE & TIMEZONE
# ====================
DEFAULT_LOCALE=en-US
DEFAULT_TIMEZONE=UTC
SUPPORTED_LOCALES=en-US,es-ES,fr-FR,de-DE,ja-JP

# ====================
# CACHE
# ====================
CACHE_TTL=3600
CACHE_PREFIX=app_
ENABLE_CACHE=true
CACHE_DRIVER=redis

# ====================
# QUEUE
# ====================
QUEUE_DRIVER=redis
QUEUE_PREFIX=queue_
MAX_JOB_ATTEMPTS=3
JOB_TIMEOUT=300

# ====================
# RATE LIMITING
# ====================
RATE_LIMIT_ENABLED=true
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=60
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false
RATE_LIMIT_SKIP_FAILED_REQUESTS=false

# ====================
# CORS
# ====================
CORS_ENABLED=true
CORS_CREDENTIALS=true
CORS_MAX_AGE=86400
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With

# ====================
# WEBHOOKS
# ====================
WEBHOOK_SECRET=generate_webhook_secret
WEBHOOK_TIMEOUT=30000
WEBHOOK_MAX_RETRIES=3
WEBHOOK_RETRY_DELAY=1000

# ====================
# NOTES
# ====================
# 1. Generate secure secrets using: openssl rand -base64 32
# 2. Never use default values in production
# 3. Validate all environment variables on startup
# 4. Use .env.schema.json for validation
# 5. Different .env files for each environment (dev, staging, prod)
# 6. Store production secrets in secure vault (AWS Secrets Manager, etc.)
# 7. Rotate secrets regularly
# 8. Monitor for exposed secrets in code